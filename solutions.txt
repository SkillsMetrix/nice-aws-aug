package com.app;

import java.io.InputStream;
import java.nio.charset.StandardCharsets;

import org.apache.commons.io.IOUtils;

import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClientBuilder;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.S3Event;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3Builder;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import com.fasterxml.jackson.databind.ObjectMapper;

public class MainAPI implements RequestHandler<S3Event, String>{

	private AmazonS3 s3Client;
	private DynamoDBMapper dbMapper;
	@Override
	public String handleRequest(S3Event input, Context context) {
		initS3Client();
		String bucketName = input.getRecords().get(0).getS3().getBucket().getName();
		String fileName = input.getRecords().get(0).getS3().getObject().getKey();
		
		try {
			InputStream inputStream= s3Client.getObject(bucketName,fileName).getObjectContent();
			String content= IOUtils.toString(inputStream,StandardCharsets.UTF_8);
			context.getLogger().log("File Content  "+ content);
			
			// read the data
			Employee employee= new ObjectMapper().readValue(content, Employee.class);
			initDynamoDB();
			dbMapper.save(employee);
			context.getLogger().log("Employee Saved TO DB");
			
		}catch (Exception e) {
			 
		}
		
		return "success";
	}
	
	private void initS3Client() {
		s3Client= AmazonS3ClientBuilder.standard().build();
		
	}
	private void initDynamoDB() {
		AmazonDynamoDB client= AmazonDynamoDBAsyncClientBuilder.standard().build();
		dbMapper= new DynamoDBMapper(client);
	}

}
----

package com.app;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
@Data
@AllArgsConstructor
@NoArgsConstructor

@DynamoDBTable(tableName = "amar-db")
public class Employee {
	
	@DynamoDBHashKey(attributeName = "id")
	@DynamoDBAutoGeneratedKey
	private String id;
	@DynamoDBAttribute( attributeName ="empId")
	private String empId;
	@DynamoDBAttribute( attributeName ="name")
	private String name;
	@DynamoDBAttribute( attributeName ="email")
	private String email;

}
